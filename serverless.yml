# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: s3-trigger-3 # NOTE: update this with your service name
tenant: daniloplima
app: testetrigger
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
iamRoleStatements:
    - Effect: Allow
      Action:
        - s3: ListBucket
      Resource: arn:aws:s3:::exemplotriggerdanilo
    - Effect: Allow
      Action:
        - s3: PutObject
      Resource: arn:aws:s3:::exemplotriggerdanilo
    - Effect : 'Allow'
      Action:
        - "sns:Publish"
      Resource:
        - "arn:aws:sns:us-east-1:102671261511:S3_AWS_SLS_SNS_2"  


# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - s3:
          bucket: exemplotriggerdanilo
          event: s3:ObjectCreated:*
      - s3:
          bucket: exemplotriggeranilo
          event: s3:ObjectRemoved:*
      - sns:
          topicName: S3_AWS_SLS_SNS_1
          displayName: PROCESSING   

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
 #Resources:
  # SnsFirstTopic:
   # Properties:
    #   DisplayName: PROCESSING
     #  TopicName: S3_AWS_SLS_SNS_3
  # SnsTopicPolicy:
   #  Type: AWS::SNS::TopicPolicy
    # Properties:
     #  PolicyDocument:
      #   Version: '2012-10-17'
       #  Statement:
        # - Sid: SnsTopicPolicy
         #  Effect: Allow
          # Principal:
           #  Service: s3.amazonaws.com
         #  Action: sns:Publish
         #  Resource: "*"
      # Topics:
       #  - Ref: SnsFirstTopic